{% extends 'base.html.twig' %}

{% block title %}
    Carte
{% endblock %}

{% block panier %}
    <meta charset="utf-8">
    <!-- Nous chargeons les fichiers CDN de Leaflet. Le CSS AVANT le JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin="" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-control-search/dist/leaflet-search.min.css" />
    <style type="text/css">
        #map { /* la carte DOIT avoir une hauteur sinon elle n'apparaît pas */
            height: 400px;
        }
    </style>
    <title>Carte</title>
</head>
<body>
    <div id="map"></div>

    <!-- Fichiers Javascript -->
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
    <script src="https://unpkg.com/leaflet-control-search/dist/leaflet-search.min.js"></script>
    <script type="text/javascript">
        // On initialise la latitude et la longitude de Paris (centre de la carte)
        var lat = 48.852969;
        var lon = 2.349903;
        var macarte = null;

        // Fonction d'initialisation de la carte
        function initMap() {
            // Créer l'objet "macarte" et l'insèrer dans l'élément HTML qui a l'ID "map"
            macarte = L.map('map').setView([lat, lon], 11);

            // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
            L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
                // Il est toujours bien de laisser le lien vers la source des données
                attribution: 'données © <a href="//osm.org/copyright">OpenStreetMap</a>/ODbL - rendu <a href="//openstreetmap.fr">OSM France</a>',
                minZoom: 1,
                maxZoom: 20
            }).addTo(macarte);

            // Ajouter le contrôle de recherche à la carte
            var searchControl = new L.Control.Search({
                position: 'topright', // position du contrôle de recherche
                layer: null, // une couche spécifique peut être définie, sinon utilisez la couche de base
                initial: false, // initialisez immédiatement la recherche lorsque la carte est chargée
                zoom: 12, // niveau de zoom après la recherche
                textPlaceholder: 'Rechercher...', // texte de l'input
                propertyName: 'display_name', // champ à rechercher dans les données du géocodeur
                marker: { // l'icône qui apparaîtra pour le marqueur
                    icon: false, // désactive l'icône par défaut
                    draggable: false // si vous voulez un marqueur draggable
                },
                moveToLocation: function(latlng, title, map) {
                    // affiche la boîte de dialogue et met à jour l'endroit
                    map.setView(latlng, map.options.zoom);
                }
            });

            searchControl.on('search:locationfound', function(e) {
                // appelé lorsqu'une recherche est effectuée et que le résultat est trouvé
                macarte.setView(e.latlng, macarte.getZoom());
            });

            // Ajouter le contrôle de recherche à la carte
            macarte.addControl(searchControl);
        }

        window.onload = function() {
            // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
            initMap();
        };
    </script>
{% endblock %}
